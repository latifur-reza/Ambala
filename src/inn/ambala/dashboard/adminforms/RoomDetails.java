/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inn.ambala.dashboard.adminforms;

import inn.ambala.admin.model.RoomDetailsModel;
import inn.ambala.dashboard.adminforms.addforms.RoomDetailsAdd;
import inn.ambala.dashboard.adminforms.addforms.RoomDetailsUpdate;
import inn.ambala.databaseconnection.admin.RoomDetailsCrud;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author REZA
 */
public class RoomDetails extends javax.swing.JPanel {

    private static DefaultTableModel model = null;

    /**
     * Creates new form RoomDetails
     */
    public RoomDetails() {
        initComponents();
        initExtraComponents();

    }

    private void initExtraComponents() {
        model = (DefaultTableModel) dataTable.getModel();
        refreshTable();
    }

    public static void refreshTable() {
        new RoomDetailsCrud(model).showAllRooms();
        totalLabel.setText("Total Rooms : " + model.getRowCount());
    }

    public void deleteButtonPressed() {
        int result = 0;
        int rowNo = dataTable.getSelectedRow();
        if (rowNo != -1) {
            int roomNo = Integer.valueOf(dataTable.getModel().getValueAt(rowNo, 0).toString());
            int option = JOptionPane.showConfirmDialog(null, "Do You Really Want to Delete?", "Delete", JOptionPane.YES_NO_OPTION);
            if (option == 0) {
                result = RoomDetailsCrud.deleteRoom(roomNo);

                refreshTable();
                if (result == 1) {
                    JOptionPane.showMessageDialog(null, "Deleted Successfully");
                } else {
                    JOptionPane.showMessageDialog(null, "Not Successfully Deleted");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "For Delete Select Any Row");
        }

        refreshTable();

    }

    public void updateButtonPressed() {
        int result = 0;
        int rowNo = dataTable.getSelectedRow();
        if (rowNo != -1) {
            int roomId = 0;
            int roomNo = Integer.valueOf(dataTable.getModel().getValueAt(rowNo, 0).toString());
            int floorNo = Integer.valueOf(dataTable.getModel().getValueAt(rowNo, 1).toString());
            String roomType = dataTable.getModel().getValueAt(rowNo, 2).toString();
            String aircondition = dataTable.getModel().getValueAt(rowNo, 3).toString();
            String status = "CheckedOut";
            RoomDetailsModel roomDetailsModel = new RoomDetailsModel(roomId, roomNo, floorNo, roomType, aircondition,status);

            new RoomDetailsUpdate(roomDetailsModel).setVisible(true);

        } else {
            JOptionPane.showMessageDialog(null, "For Update Select Any Row");
        }

    }

    private void addNewButtonPressed() {
        new RoomDetailsAdd().setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        addNewButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        roomDetailsLabel = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room No.", "Floor No.", "Room Type", "Aircondition"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(dataTable);

        addNewButton.setBackground(new java.awt.Color(59, 180, 74));
        addNewButton.setForeground(new java.awt.Color(255, 255, 255));
        addNewButton.setText("Add New");
        addNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(236, 0, 138));
        updateButton.setForeground(new java.awt.Color(255, 255, 255));
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(0, 173, 238));
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        roomDetailsLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        roomDetailsLabel.setText("Room Details");

        totalLabel.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        totalLabel.setText("Total rooms: 30");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addNewButton))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(roomDetailsLabel)
                        .addGap(299, 299, 299))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(totalLabel)
                        .addGap(321, 321, 321))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(roomDetailsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewButton)
                    .addComponent(updateButton)
                    .addComponent(deleteButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        deleteButtonPressed();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        updateButtonPressed();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void addNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewButtonActionPerformed
        addNewButtonPressed();
    }//GEN-LAST:event_addNewButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewButton;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel roomDetailsLabel;
    private static javax.swing.JLabel totalLabel;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
