/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inn.ambala.dashboard.userforms;

import inn.ambala.dashboard.userforms.model.UserInfoModel;
import inn.ambala.dashboard.userforms.model.UsersRoomInfoModel;
import inn.ambala.databaseconnection.admin.RoomDetailsCrud;
import inn.ambala.databaseconnection.userforms.forms.UserInfoCrud;
import inn.ambala.databaseconnection.userforms.forms.UserOthersInfoCrud;
import inn.ambala.databaseconnection.userforms.forms.UserRoomInfoCrud;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author REZA
 */
public class RoomTransfer extends javax.swing.JPanel {

    private static DefaultTableModel vacaentRoomsModel = null;
    private static DefaultTableModel dataTableModel = null;
    /**
     * Creates new form RoomTransfer
     */
    public RoomTransfer() {
        initComponents();
        initExtraComponents();
    }
    
    private void initExtraComponents(){
        
        vacaentRoomsModel = (DefaultTableModel) vacaentRoomsTable.getModel();
        dataTableModel = (DefaultTableModel) dataTable.getModel();
        refreshTable();
    }
    
    public static void refreshTable(){
        new RoomDetailsCrud(vacaentRoomsModel).showCheckedOutRooms();
        showCurrentCheckIns();
    }
    
    private static void showCurrentCheckIns(){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        dataTableModel.setRowCount(0);
        ArrayList<UserInfoModel> allUserInfo = UserInfoCrud.getAllUserInfo();
        ArrayList<UsersRoomInfoModel> allUserRoomInfo = UserRoomInfoCrud.getAllUserRoomInfo();
        for(UsersRoomInfoModel urim : allUserRoomInfo){
            if(urim.getStatus().equals("CheckedIn")){
                for(UserInfoModel uim : allUserInfo){
                    if(urim.getMrNo().equals(uim.getMrNo())){
                        dataTableModel.addRow(new Object[]{urim.getMrNo(),urim.getRoomNo(),uim.getName(),sdf.format(urim.getArrivalDate()),urim.getStatus(),""});
                        
                    }
                }
            }
        }
    }
    
    private void vacaentRoomsTableMouseClicked(){
        int rowNo = vacaentRoomsTable.getSelectedRow();
        newRoomNoTF.setText(vacaentRoomsTable.getModel().getValueAt(rowNo, 0).toString());
    }
    
    private void transferButtonPressed(){
        if(mrNoTF.getText().equals("") || currentRoomNoTF.getText().equals("") || newRoomNoTF.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Fill All the fields");
        }
        
        else{
            try{
                String mrNo = mrNoTF.getText();
            
                int currentRoomNo = Integer.valueOf(currentRoomNoTF.getText());
                int newRoomNo = Integer.valueOf(newRoomNoTF.getText());
            
                UserRoomInfoCrud.updateUserRoomInfoRoomNo(mrNo, newRoomNo);
                UserOthersInfoCrud.updateUserOthersInfoRoomNo(mrNo, newRoomNo);

                RoomDetailsCrud.updateRoomStatus(currentRoomNo, "CheckedOut");
                RoomDetailsCrud.updateRoomStatus(newRoomNo, "CheckedIn");

                mrNoTF.setText("");
                currentRoomNoTF.setText("");
                newRoomNoTF.setText("");

                refreshTable();
                AdvancePayment.refreshTable();
                CheckIn.refreshTable();
                CheckOut.refreshTable();
                Laundry.showCurrentCheckIns();
                Restaurant.showCurrentCheckIns();
                Others.showCurrentCheckIns();

                JOptionPane.showMessageDialog(null, "Room Transfered Successfully");
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Wrong Entry");
            }
        }
    }
    
    private void dataTableMouseClickedAction(){
        int rowNo = dataTable.getSelectedRow();
        mrNoTF.setText(dataTable.getModel().getValueAt(rowNo, 0).toString());
        currentRoomNoTF.setText(dataTable.getModel().getValueAt(rowNo, 1).toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roomTransferFormLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        vacaentRoomsTable = new javax.swing.JTable();
        mrNoTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        newRoomNoTF = new javax.swing.JTextField();
        transferButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        currentRoomNoTF = new javax.swing.JTextField();

        roomTransferFormLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        roomTransferFormLabel.setText("Room Transfer");

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MR No.", "Room No.", "Guest Name", "Arrival Date", "Room Status", "PABx Ext"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataTableMouseClicked(evt);
            }
        });
        dataTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dataTableKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(dataTable);

        vacaentRoomsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rooms"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vacaentRoomsTable.getTableHeader().setReorderingAllowed(false);
        vacaentRoomsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vacaentRoomsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(vacaentRoomsTable);
        if (vacaentRoomsTable.getColumnModel().getColumnCount() > 0) {
            vacaentRoomsTable.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel1.setText("MR No");

        jLabel2.setText("New Room");

        newRoomNoTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newRoomNoTFActionPerformed(evt);
            }
        });

        transferButton.setBackground(new java.awt.Color(0, 173, 238));
        transferButton.setText("Transfer");
        transferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Currnet Room");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(223, 223, 223)
                                .addComponent(roomTransferFormLabel)
                                .addGap(0, 194, Short.MAX_VALUE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(mrNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(currentRoomNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(newRoomNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(49, 49, 49)
                                .addComponent(transferButton))
                            .addComponent(jLabel2))
                        .addGap(10, 10, 10)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(roomTransferFormLabel)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mrNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newRoomNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(transferButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentRoomNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void vacaentRoomsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vacaentRoomsTableMouseClicked
        vacaentRoomsTableMouseClicked();
    }//GEN-LAST:event_vacaentRoomsTableMouseClicked

    private void transferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferButtonActionPerformed
        transferButtonPressed();
    }//GEN-LAST:event_transferButtonActionPerformed

    private void newRoomNoTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newRoomNoTFActionPerformed
        transferButtonPressed();
    }//GEN-LAST:event_newRoomNoTFActionPerformed

    private void dataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataTableMouseClicked
        dataTableMouseClickedAction();
    }//GEN-LAST:event_dataTableMouseClicked

    private void dataTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dataTableKeyReleased
        dataTableMouseClickedAction();
    }//GEN-LAST:event_dataTableKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField currentRoomNoTF;
    private javax.swing.JTable dataTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField mrNoTF;
    private javax.swing.JTextField newRoomNoTF;
    private javax.swing.JLabel roomTransferFormLabel;
    private javax.swing.JButton transferButton;
    private javax.swing.JTable vacaentRoomsTable;
    // End of variables declaration//GEN-END:variables
}
